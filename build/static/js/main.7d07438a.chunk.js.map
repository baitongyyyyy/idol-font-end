{"version":3,"sources":["logo.svg","js/actions.js","pages/App.js","pages/Example.js","pages/Test.js","pages/PageNotFound.js","js/Route.js","js/reducers.js","js/sagas.js","js/store.js","i18n.js","locale/en.js","locale/th.js","serviceWorker.js","index.js"],"names":["module","exports","actionTypes","App","state","data","display","value","console","log","props","addUser","renderButton","onClick","e","Math","random","changeLanguage","lng","t","i18n","this","className","src","logo","alt","user","login","href","target","rel","to","Component","connect","dispatch","payload","type","withTranslation","Example","Test","PageNotFound","Routers","role","renderRolePage","path","component","exact","initialState","rootReducer","action","Object","assign","watcherSaga","loginSaga","takeEvery","put","initialiseSagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","sagas","resources","en","home","footer","th","use","initReactI18next","init","keySeparator","interpolation","escapeValue","Boolean","window","location","hostname","match","ReactDOM","render","Route","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d07438a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const actionTypes = {\r\n    FAILURE: 'FAILURE',\r\n    LOG_IN: 'LOG_IN',\r\n    LOG_IN_SUCCESS: 'LOG_IN_SUCCESS'\r\n}\r\n\r\nexport function failure(error) {\r\n    return {\r\n        type: actionTypes.FAILURE,\r\n        error,\r\n    }\r\n}\r\n\r\nexport function addLogin(payload) {\r\n    console.log(\"actions\", payload);\r\n    return { type: actionTypes.LOG_IN, payload }\r\n};\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport logo from '../logo.svg';\nimport { addLogin } from '../js/actions'\nimport { withTranslation } from 'react-i18next';\n\nclass App extends Component {\n\n  \n  state = {\n      data: 'user'\n  }\n\n  display = (value) => {\n    console.log(value);\n    this.props.addUser( value );\n  }\n\n  renderButton = () => {\n    return (<button onClick={e=>this.display(Math.random())}>Button</button>)\n  }\n\n  changeLanguage = lng => {\n    const { t, i18n } = this.props;\n    i18n.changeLanguage(lng);\n  };\n\n  render () {\n    const { t, i18n } = this.props;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>{t(\"hello\")}</h2>\n          <p>{t(\"footer:address\")}</p>\n          <p>{this.props.user}</p>\n          <p>{this.props.login}</p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          {this.renderButton()}\n          <button onClick={() => this.changeLanguage(\"th\")}>th</button>\n          <button onClick={() => this.changeLanguage(\"en\")}>en</button>\n          <Link to=\"/example\" >example</Link>\n          <Link to=\"/test\" >test</Link>\n        </header>\n        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { user: state.user, login: state.login };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addUser: user => dispatch(addLogin(user))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation([\"home\",\"footer\"])(App));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nclass Example extends Component {\n\n    state = {\n        data: false\n    }\n\n    componentDidMount() {\n        console.log(this.state, this.props);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">Example Component</div>\n\n                            <div className=\"card-body\">{this.props.user}</div>\n\n                            \n                        </div>\n                        <Link to=\"/test\" >Test</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { user: state.user };\n};\n  \nfunction mapDispatchToProps(dispatch) {\n    return {\n        \n    };\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Example);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nclass Test extends Component {\n\n    state = {\n        data: false\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">TEST Component</div>\n\n                            <div className=\"card-body\">I'm an Test component!</div>\n                            <div className=\"card-body\">{this.props.user}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return { user: state.user };\n};\n  \nfunction mapDispatchToProps(dispatch) {\n    return {\n        \n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Test);","import React, { Component } from 'react';\n\n\nclass PageNotFound extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-8\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">Page not Found</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PageNotFound;\n","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport App from '../pages/App'\r\nimport Example from '../pages/Example'\r\nimport Test from '../pages/Test'\r\nimport PageNotFound from '../pages/PageNotFound'\r\n\r\nclass Routers extends Component {\r\n\r\n    state = {\r\n        role: ''\r\n    }\r\n\r\n    renderRolePage = () => {\r\n        if (this.state.role === 'test') {\r\n            return <Route  path=\"/test\" component={Test} />\r\n        } else {\r\n            return <Route exact path=\"/\" component={Example} />\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={App} />\r\n                <Route path=\"/example\" component={Example} />\r\n                <Route path=\"/test\" component={Test} />\r\n                <Route component={PageNotFound} />\r\n            </Switch>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Routers","import { actionTypes } from './actions'\r\nconst initialState = {\r\n    user: 'no',\r\n  };\r\n  \r\n  function rootReducer(state = initialState, action) {\r\n\r\n    if (action.type === actionTypes.LOG_IN) {\r\n      return Object.assign({}, state, {\r\n        user: action.payload\r\n      });\r\n    }\r\n\r\n    return state;\r\n  };\r\n  \r\n  export default rootReducer;","import { takeEvery, call, put } from \"redux-saga/effects\";\r\nimport { actionTypes} from './actions';\r\n\r\nexport default function* watcherSaga() {\r\n  yield takeEvery(actionTypes.LOG_IN, loginSaga);\r\n}\r\n\r\nfunction* loginSaga(payload) {\r\n  try {\r\n      console.log(\"saga\",payload);\r\n    yield put({ payload });\r\n  } catch (e) {\r\n    yield put({ type: actionTypes.FAILURE, payload: e });\r\n  }\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./reducers\";\r\nimport sagas from './sagas'\r\n\r\nconst initialiseSagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(initialiseSagaMiddleware)\r\n);\r\n\r\ninitialiseSagaMiddleware.run(sagas);\r\n\r\nexport default store;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport en from \"./locale/en\";\r\nimport th from \"./locale/th\";\r\n\r\nconst resources = {\r\n  en: en,\r\n  th: th\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next) \r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n\r\n    keySeparator: false,\r\n\r\n    interpolation: {\r\n      escapeValue: false \r\n    }\r\n  });\r\n\r\n  export default i18n;","let en = {\r\n    home: {\r\n      \"hello\": \"Hello\"\r\n    },\r\n    footer: {\r\n      \"address\": \"Address\"\r\n    }\r\n  };\r\n  \r\n  export default en;","let th = {\r\n    home: {\r\n      \"hello\": \"สวัสดี\"\r\n    },\r\n    footer: {\r\n      \"address\": \"ที่อยู่\"\r\n    }\r\n  };\r\n  \r\n  export default th;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { I18nextProvider } from 'react-i18next';\nimport './css/bootstrap.min.css';\nimport './css/style.css';\nimport Router from './js/Route';\nimport store from './js/store';\nimport i18n from './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    \n    <Provider store={store}>\n        <I18nextProvider i18n={i18n}>\n            <BrowserRouter>\n                <Router />\n            </BrowserRouter>\n            </I18nextProvider>\n    </Provider>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}